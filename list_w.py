# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'list_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.5
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from FUNCTION import change_table
from FUNCTION import return_table
from add_service import Ui_Add_servis
from add_client import Ui_Add_client
from add_doctor import Ui_Add_doctor
from add_zapis import Ui_Zapis
from sucsessful_wndw import Ui_Sucsessful_windw
from error_wndw import Ui_Error_windw


class Ui_list(object):
    def setupUi(self, list):
        list.setObjectName("list")
        list.resize(596, 368)
        self.tableWidget = QtWidgets.QTableWidget(list)
        self.tableWidget.setGeometry(QtCore.QRect(20, 20, 561, 231))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(0)
        self.tableWidget.setRowCount(0)
        self.Add_btn = QtWidgets.QPushButton(list)
        self.Add_btn.setGeometry(QtCore.QRect(20, 260, 121, 91))
        self.Add_btn.setObjectName("Add_btn")
        self.change_btn = QtWidgets.QPushButton(list)
        self.change_btn.setGeometry(QtCore.QRect(160, 260, 171, 91))
        self.change_btn.setAutoFillBackground(False)
        self.change_btn.setAutoRepeat(False)
        self.change_btn.setDefault(False)
        self.change_btn.setFlat(False)
        self.change_btn.setObjectName("change_btn")
        self.del_btn = QtWidgets.QPushButton(list)
        self.del_btn.setGeometry(QtCore.QRect(472, 260, 111, 91))
        self.del_btn.setObjectName("del_btn")

        self.retranslateUi(list)
        QtCore.QMetaObject.connectSlotsByName(list)

    def retranslateUi(self, list):
        _translate = QtCore.QCoreApplication.translate
        list.setWindowTitle(_translate("list", "list"))
        self.Add_btn.setText(_translate("list", "Добавить новое"))
        self.change_btn.setText(_translate("list", "Изменить существующее"))
        self.del_btn.setText(_translate("list", "Удалить запись"))

        self.Add_btn.clicked.connect(self.add_new)
        self.change_btn.clicked.connect(self.change_in_db)
        self.del_btn.clicked.connect(self.dell_from_db)

    def new_window(self, servis=False, doctor=False, client=False, zapis=False):
        if servis == True:
            app2 = QtWidgets.QDialog()
            ui2 = Ui_Add_servis()
            ui2.setupUi(app2)
            app2.show()
            app2.exec_()
        elif doctor == True:
            app2 = QtWidgets.QDialog()
            ui2 = Ui_Add_doctor()
            ui2.setupUi(app2)
            app2.show()
            app2.exec_()
        elif client == True:
            app2 = QtWidgets.QDialog()
            ui2 = Ui_Add_client()
            ui2.setupUi(app2)
            app2.show()
            app2.exec_()
        elif zapis == True:
            app2 = QtWidgets.QDialog()
            ui2 = Ui_Zapis()
            ui2.setupUi(app2)
            app2.show()
            app2.exec_()

    def check(self, listt):
        names_servis = return_table('SERVICE')
        if listt == names_servis[1]:
            return 'SERVICE'
        names_zapis = return_table('ORDERS')
        if listt == names_zapis[1]:
            return 'ORDERS'
        names_doctors = return_table('EMPLOYERS')
        if listt == names_doctors[1]:
            return 'EMPLOYERS'
        names_clients = return_table('CLIENT_BASE')
        if listt == names_clients[1]:
            return 'CLIENT_BASE'

    def add_new(self):
        names_col = []

        for x in range(0, self.tableWidget.columnCount()):
            add = self.tableWidget.horizontalHeaderItem(x)
            names_col.append(add.text())

        answ = self.check(names_col)

        if answ == 'SERVICE':
            self.new_window(servis=True)
        elif answ == 'CLIENT_BASE':
            self.new_window(client=True)
        elif answ == 'EMPLOYERS':
            self.new_window(doctor=True)
        elif answ == 'ORDERS':
            self.new_window(zapis=True)

    def change_in_db(self):
        self.Add_btn.setDisabled(True)
        self.change_btn.setDisabled(True)
        self.del_btn.setDisabled(True)
        items = self.tableWidget.selectedItems()
        if items != [] and len(items) >=4:

            korteg = []
            for x in range(1, len(items)):
                korteg.append(items[x].text())
            korteg = tuple(korteg)

            names_col = []

            for x in range(0, self.tableWidget.columnCount()):
                add = self.tableWidget.horizontalHeaderItem(x)
                names_col.append(add.text())

            res = change_table(self.check(names_col), items[0].text(), korteg)

            if res == True:
                sucsess = QtWidgets.QDialog()
                ui2 = Ui_Sucsessful_windw()
                ui2.setupUi(sucsess)
                sucsess.show()
                sucsess.exec_()
            else:
                print(res)
                error = QtWidgets.QDialog()
                ui2 = Ui_Error_windw()
                ui2.setupUi(error)
                error.show()
                error.exec_()

                self.Add_btn.setDisabled(False)
                self.change_btn.setDisabled(False)
                self.del_btn.setDisabled(False)
        else:
            self.Add_btn.setDisabled(False)
            self.change_btn.setDisabled(False)
            self.del_btn.setDisabled(False)


    def dell_from_db(self):
        self.Add_btn.setDisabled(True)
        self.change_btn.setDisabled(True)
        self.del_btn.setDisabled(True)

        items = self.tableWidget.selectedItems()
        if items != [] and len(items) >= 4:
            id = items[0].text()
            names_col = []

            for x in range(0, self.tableWidget.columnCount()):
                add = self.tableWidget.horizontalHeaderItem(x)
                names_col.append(add.text())
            tbl_name = self.check(names_col)
            print(id,tbl_name)
        else:
            self.Add_btn.setDisabled(False)
            self.change_btn.setDisabled(False)
            self.del_btn.setDisabled(False)


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    list = QtWidgets.QDialog()
    ui = Ui_list()
    ui.setupUi(list)
    list.show()
    sys.exit(app.exec_())
